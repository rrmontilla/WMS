//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WMS.wms_service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Select_Canvass_ApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSummaryReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPurchaseOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_POOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Pending_POOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_PO_for_NotedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_PO_for_ApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_PODetailsAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_PO_NotedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_PO_ApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMRISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_MRISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_MRISDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_MRISOperationCompleted;
        
        private System.Threading.SendOrPostCallback Select_PO_ApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Pending_RROperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RIDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_RIOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertReceivingReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRRDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RR_for_NotedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_RR_NotedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_RR_ApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RR_for_ApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignatoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignatoryByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSignatoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSignatoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSignatoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback VersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyUserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDepartmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateBranchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectUserByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectUserByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllUserV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAccessModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUserAccessRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserAccessRightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectUserAccessModuleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSupplierOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectItemPerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRequestOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RO_RequestorOperationCompleted;
        
        private System.Threading.SendOrPostCallback Print_TransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RO_BY_RONumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RO_DetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RO_EndorserOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RO_RecommendersOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RO_ApproverOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_RO_ByRONumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback RO_UpdateForEndorseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RO_UpdateForRecommendOperationCompleted;
        
        private System.Threading.SendOrPostCallback RO_UpdateForApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Select_RO_ApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCanvassOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertCanvassDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approve_CanvassItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CanvassOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Canvass_for_NotedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Canvass_for_ApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CanvassDetailsNotApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CanvassDetailsApprovedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CanvassDetailsAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CanvassDetailsAll1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertConstructionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Canvass_NotedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Canvass_ApprovedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::WMS.Properties.Settings.Default.WMS_wms_service_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Select_Canvass_ApprovedCompletedEventHandler Select_Canvass_ApprovedCompleted;
        
        /// <remarks/>
        public event SelectSummaryReportCompletedEventHandler SelectSummaryReportCompleted;
        
        /// <remarks/>
        public event InsertPurchaseOrderCompletedEventHandler InsertPurchaseOrderCompleted;
        
        /// <remarks/>
        public event Get_POCompletedEventHandler Get_POCompleted;
        
        /// <remarks/>
        public event Get_Pending_POCompletedEventHandler Get_Pending_POCompleted;
        
        /// <remarks/>
        public event Get_PO_for_NotedCompletedEventHandler Get_PO_for_NotedCompleted;
        
        /// <remarks/>
        public event Get_PO_for_ApprovedCompletedEventHandler Get_PO_for_ApprovedCompleted;
        
        /// <remarks/>
        public event Get_PODetailsAllCompletedEventHandler Get_PODetailsAllCompleted;
        
        /// <remarks/>
        public event Update_PO_NotedCompletedEventHandler Update_PO_NotedCompleted;
        
        /// <remarks/>
        public event Update_PO_ApprovedCompletedEventHandler Update_PO_ApprovedCompleted;
        
        /// <remarks/>
        public event InsertMRISCompletedEventHandler InsertMRISCompleted;
        
        /// <remarks/>
        public event Get_MRISCompletedEventHandler Get_MRISCompleted;
        
        /// <remarks/>
        public event Get_MRISDetailsCompletedEventHandler Get_MRISDetailsCompleted;
        
        /// <remarks/>
        public event Update_MRISCompletedEventHandler Update_MRISCompleted;
        
        /// <remarks/>
        public event Select_PO_ApprovedCompletedEventHandler Select_PO_ApprovedCompleted;
        
        /// <remarks/>
        public event Get_Pending_RRCompletedEventHandler Get_Pending_RRCompleted;
        
        /// <remarks/>
        public event InsertRICompletedEventHandler InsertRICompleted;
        
        /// <remarks/>
        public event Get_RICompletedEventHandler Get_RICompleted;
        
        /// <remarks/>
        public event Get_RIDetailsCompletedEventHandler Get_RIDetailsCompleted;
        
        /// <remarks/>
        public event Update_RICompletedEventHandler Update_RICompleted;
        
        /// <remarks/>
        public event InsertReceivingReportCompletedEventHandler InsertReceivingReportCompleted;
        
        /// <remarks/>
        public event InsertRRDetailsCompletedEventHandler InsertRRDetailsCompleted;
        
        /// <remarks/>
        public event Get_RR_for_NotedCompletedEventHandler Get_RR_for_NotedCompleted;
        
        /// <remarks/>
        public event Update_RR_NotedCompletedEventHandler Update_RR_NotedCompleted;
        
        /// <remarks/>
        public event Update_RR_ApprovedCompletedEventHandler Update_RR_ApprovedCompleted;
        
        /// <remarks/>
        public event Get_RR_for_ApprovedCompletedEventHandler Get_RR_for_ApprovedCompleted;
        
        /// <remarks/>
        public event GetSignatoryCompletedEventHandler GetSignatoryCompleted;
        
        /// <remarks/>
        public event GetSignatoryByUserIdCompletedEventHandler GetSignatoryByUserIdCompleted;
        
        /// <remarks/>
        public event InsertSignatoryCompletedEventHandler InsertSignatoryCompleted;
        
        /// <remarks/>
        public event UpdateSignatoryCompletedEventHandler UpdateSignatoryCompleted;
        
        /// <remarks/>
        public event DeleteSignatoryCompletedEventHandler DeleteSignatoryCompleted;
        
        /// <remarks/>
        public event VersionCompletedEventHandler VersionCompleted;
        
        /// <remarks/>
        public event VerifyUserLoginCompletedEventHandler VerifyUserLoginCompleted;
        
        /// <remarks/>
        public event SelectDepartmentCompletedEventHandler SelectDepartmentCompleted;
        
        /// <remarks/>
        public event InsertDepartmentCompletedEventHandler InsertDepartmentCompleted;
        
        /// <remarks/>
        public event UpdateDepartmentCompletedEventHandler UpdateDepartmentCompleted;
        
        /// <remarks/>
        public event SelectBranchCompletedEventHandler SelectBranchCompleted;
        
        /// <remarks/>
        public event InsertBranchCompletedEventHandler InsertBranchCompleted;
        
        /// <remarks/>
        public event UpdateBranchCompletedEventHandler UpdateBranchCompleted;
        
        /// <remarks/>
        public event SelectPositionCompletedEventHandler SelectPositionCompleted;
        
        /// <remarks/>
        public event InsertPositionCompletedEventHandler InsertPositionCompleted;
        
        /// <remarks/>
        public event UpdatePositionCompletedEventHandler UpdatePositionCompleted;
        
        /// <remarks/>
        public event RegisterUserAccountCompletedEventHandler RegisterUserAccountCompleted;
        
        /// <remarks/>
        public event SelectUserByUserNameCompletedEventHandler SelectUserByUserNameCompleted;
        
        /// <remarks/>
        public event SelectUserByUserIDCompletedEventHandler SelectUserByUserIDCompleted;
        
        /// <remarks/>
        public event SelectAllUserCompletedEventHandler SelectAllUserCompleted;
        
        /// <remarks/>
        public event SelectAllUserV2CompletedEventHandler SelectAllUserV2Completed;
        
        /// <remarks/>
        public event InsertAccessModuleCompletedEventHandler InsertAccessModuleCompleted;
        
        /// <remarks/>
        public event InsertUserAccessRightsCompletedEventHandler InsertUserAccessRightsCompleted;
        
        /// <remarks/>
        public event DeleteUserAccessRightsCompletedEventHandler DeleteUserAccessRightsCompleted;
        
        /// <remarks/>
        public event SelectUserAccessModuleCompletedEventHandler SelectUserAccessModuleCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event UpdateUserPasswordCompletedEventHandler UpdateUserPasswordCompleted;
        
        /// <remarks/>
        public event InsertSupplierCompletedEventHandler InsertSupplierCompleted;
        
        /// <remarks/>
        public event InsertAccountsCompletedEventHandler InsertAccountsCompleted;
        
        /// <remarks/>
        public event InsertItemsCompletedEventHandler InsertItemsCompleted;
        
        /// <remarks/>
        public event SelectSupplierCompletedEventHandler SelectSupplierCompleted;
        
        /// <remarks/>
        public event UpdateSupplierCompletedEventHandler UpdateSupplierCompleted;
        
        /// <remarks/>
        public event UpdateAccountCompletedEventHandler UpdateAccountCompleted;
        
        /// <remarks/>
        public event SelectAllAccountCompletedEventHandler SelectAllAccountCompleted;
        
        /// <remarks/>
        public event SelectAllItemCompletedEventHandler SelectAllItemCompleted;
        
        /// <remarks/>
        public event SelectItemPerIDCompletedEventHandler SelectItemPerIDCompleted;
        
        /// <remarks/>
        public event UpdateItemCompletedEventHandler UpdateItemCompleted;
        
        /// <remarks/>
        public event InsertRequestOrderCompletedEventHandler InsertRequestOrderCompleted;
        
        /// <remarks/>
        public event Get_RO_RequestorCompletedEventHandler Get_RO_RequestorCompleted;
        
        /// <remarks/>
        public event Print_TransactionCompletedEventHandler Print_TransactionCompleted;
        
        /// <remarks/>
        public event Get_RO_BY_RONumberCompletedEventHandler Get_RO_BY_RONumberCompleted;
        
        /// <remarks/>
        public event Get_RO_DetailsCompletedEventHandler Get_RO_DetailsCompleted;
        
        /// <remarks/>
        public event Get_RO_EndorserCompletedEventHandler Get_RO_EndorserCompleted;
        
        /// <remarks/>
        public event Get_RO_RecommendersCompletedEventHandler Get_RO_RecommendersCompleted;
        
        /// <remarks/>
        public event Get_RO_ApproverCompletedEventHandler Get_RO_ApproverCompleted;
        
        /// <remarks/>
        public event Get_RO_ByRONumberCompletedEventHandler Get_RO_ByRONumberCompleted;
        
        /// <remarks/>
        public event RO_UpdateForEndorseCompletedEventHandler RO_UpdateForEndorseCompleted;
        
        /// <remarks/>
        public event RO_UpdateForRecommendCompletedEventHandler RO_UpdateForRecommendCompleted;
        
        /// <remarks/>
        public event RO_UpdateForApprovedCompletedEventHandler RO_UpdateForApprovedCompleted;
        
        /// <remarks/>
        public event Select_RO_ApproveCompletedEventHandler Select_RO_ApproveCompleted;
        
        /// <remarks/>
        public event InsertCanvassCompletedEventHandler InsertCanvassCompleted;
        
        /// <remarks/>
        public event InsertCanvassDetailsCompletedEventHandler InsertCanvassDetailsCompleted;
        
        /// <remarks/>
        public event Approve_CanvassItemsCompletedEventHandler Approve_CanvassItemsCompleted;
        
        /// <remarks/>
        public event Get_CanvassCompletedEventHandler Get_CanvassCompleted;
        
        /// <remarks/>
        public event Get_Canvass_for_NotedCompletedEventHandler Get_Canvass_for_NotedCompleted;
        
        /// <remarks/>
        public event Get_Canvass_for_ApprovedCompletedEventHandler Get_Canvass_for_ApprovedCompleted;
        
        /// <remarks/>
        public event Get_CanvassDetailsNotApprovedCompletedEventHandler Get_CanvassDetailsNotApprovedCompleted;
        
        /// <remarks/>
        public event Get_CanvassDetailsApprovedCompletedEventHandler Get_CanvassDetailsApprovedCompleted;
        
        /// <remarks/>
        public event Get_CanvassDetailsAllCompletedEventHandler Get_CanvassDetailsAllCompleted;
        
        /// <remarks/>
        public event Get_CanvassDetailsAll1CompletedEventHandler Get_CanvassDetailsAll1Completed;
        
        /// <remarks/>
        public event GetAllItemsCompletedEventHandler GetAllItemsCompleted;
        
        /// <remarks/>
        public event GetAllDataCompletedEventHandler GetAllDataCompleted;
        
        /// <remarks/>
        public event InsertConstructionCompletedEventHandler InsertConstructionCompleted;
        
        /// <remarks/>
        public event Update_Canvass_NotedCompletedEventHandler Update_Canvass_NotedCompleted;
        
        /// <remarks/>
        public event Update_Canvass_ApprovedCompletedEventHandler Update_Canvass_ApprovedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Select_Canvass_Approved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Select_Canvass_Approved() {
            object[] results = this.Invoke("Select_Canvass_Approved", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Select_Canvass_ApprovedAsync() {
            this.Select_Canvass_ApprovedAsync(null);
        }
        
        /// <remarks/>
        public void Select_Canvass_ApprovedAsync(object userState) {
            if ((this.Select_Canvass_ApprovedOperationCompleted == null)) {
                this.Select_Canvass_ApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelect_Canvass_ApprovedOperationCompleted);
            }
            this.InvokeAsync("Select_Canvass_Approved", new object[0], this.Select_Canvass_ApprovedOperationCompleted, userState);
        }
        
        private void OnSelect_Canvass_ApprovedOperationCompleted(object arg) {
            if ((this.Select_Canvass_ApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Select_Canvass_ApprovedCompleted(this, new Select_Canvass_ApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectSummaryReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectSummaryReport(string title, System.DateTime tdt1, System.DateTime tdt2, string id) {
            object[] results = this.Invoke("SelectSummaryReport", new object[] {
                        title,
                        tdt1,
                        tdt2,
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectSummaryReportAsync(string title, System.DateTime tdt1, System.DateTime tdt2, string id) {
            this.SelectSummaryReportAsync(title, tdt1, tdt2, id, null);
        }
        
        /// <remarks/>
        public void SelectSummaryReportAsync(string title, System.DateTime tdt1, System.DateTime tdt2, string id, object userState) {
            if ((this.SelectSummaryReportOperationCompleted == null)) {
                this.SelectSummaryReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSummaryReportOperationCompleted);
            }
            this.InvokeAsync("SelectSummaryReport", new object[] {
                        title,
                        tdt1,
                        tdt2,
                        id}, this.SelectSummaryReportOperationCompleted, userState);
        }
        
        private void OnSelectSummaryReportOperationCompleted(object arg) {
            if ((this.SelectSummaryReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSummaryReportCompleted(this, new SelectSummaryReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPurchaseOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertPurchaseOrder(string xml1, string xml2) {
            object[] results = this.Invoke("InsertPurchaseOrder", new object[] {
                        xml1,
                        xml2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPurchaseOrderAsync(string xml1, string xml2) {
            this.InsertPurchaseOrderAsync(xml1, xml2, null);
        }
        
        /// <remarks/>
        public void InsertPurchaseOrderAsync(string xml1, string xml2, object userState) {
            if ((this.InsertPurchaseOrderOperationCompleted == null)) {
                this.InsertPurchaseOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPurchaseOrderOperationCompleted);
            }
            this.InvokeAsync("InsertPurchaseOrder", new object[] {
                        xml1,
                        xml2}, this.InsertPurchaseOrderOperationCompleted, userState);
        }
        
        private void OnInsertPurchaseOrderOperationCompleted(object arg) {
            if ((this.InsertPurchaseOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPurchaseOrderCompleted(this, new InsertPurchaseOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_PO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_PO(int userID) {
            object[] results = this.Invoke("Get_PO", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_POAsync(int userID) {
            this.Get_POAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_POAsync(int userID, object userState) {
            if ((this.Get_POOperationCompleted == null)) {
                this.Get_POOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_POOperationCompleted);
            }
            this.InvokeAsync("Get_PO", new object[] {
                        userID}, this.Get_POOperationCompleted, userState);
        }
        
        private void OnGet_POOperationCompleted(object arg) {
            if ((this.Get_POCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_POCompleted(this, new Get_POCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Pending_PO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Pending_PO(int userID) {
            object[] results = this.Invoke("Get_Pending_PO", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Pending_POAsync(int userID) {
            this.Get_Pending_POAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_Pending_POAsync(int userID, object userState) {
            if ((this.Get_Pending_POOperationCompleted == null)) {
                this.Get_Pending_POOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Pending_POOperationCompleted);
            }
            this.InvokeAsync("Get_Pending_PO", new object[] {
                        userID}, this.Get_Pending_POOperationCompleted, userState);
        }
        
        private void OnGet_Pending_POOperationCompleted(object arg) {
            if ((this.Get_Pending_POCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Pending_POCompleted(this, new Get_Pending_POCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_PO_for_Noted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_PO_for_Noted(int userID) {
            object[] results = this.Invoke("Get_PO_for_Noted", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_PO_for_NotedAsync(int userID) {
            this.Get_PO_for_NotedAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_PO_for_NotedAsync(int userID, object userState) {
            if ((this.Get_PO_for_NotedOperationCompleted == null)) {
                this.Get_PO_for_NotedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_PO_for_NotedOperationCompleted);
            }
            this.InvokeAsync("Get_PO_for_Noted", new object[] {
                        userID}, this.Get_PO_for_NotedOperationCompleted, userState);
        }
        
        private void OnGet_PO_for_NotedOperationCompleted(object arg) {
            if ((this.Get_PO_for_NotedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_PO_for_NotedCompleted(this, new Get_PO_for_NotedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_PO_for_Approved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_PO_for_Approved(int userID) {
            object[] results = this.Invoke("Get_PO_for_Approved", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_PO_for_ApprovedAsync(int userID) {
            this.Get_PO_for_ApprovedAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_PO_for_ApprovedAsync(int userID, object userState) {
            if ((this.Get_PO_for_ApprovedOperationCompleted == null)) {
                this.Get_PO_for_ApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_PO_for_ApprovedOperationCompleted);
            }
            this.InvokeAsync("Get_PO_for_Approved", new object[] {
                        userID}, this.Get_PO_for_ApprovedOperationCompleted, userState);
        }
        
        private void OnGet_PO_for_ApprovedOperationCompleted(object arg) {
            if ((this.Get_PO_for_ApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_PO_for_ApprovedCompleted(this, new Get_PO_for_ApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_PODetailsAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_PODetailsAll(int POID) {
            object[] results = this.Invoke("Get_PODetailsAll", new object[] {
                        POID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_PODetailsAllAsync(int POID) {
            this.Get_PODetailsAllAsync(POID, null);
        }
        
        /// <remarks/>
        public void Get_PODetailsAllAsync(int POID, object userState) {
            if ((this.Get_PODetailsAllOperationCompleted == null)) {
                this.Get_PODetailsAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_PODetailsAllOperationCompleted);
            }
            this.InvokeAsync("Get_PODetailsAll", new object[] {
                        POID}, this.Get_PODetailsAllOperationCompleted, userState);
        }
        
        private void OnGet_PODetailsAllOperationCompleted(object arg) {
            if ((this.Get_PODetailsAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_PODetailsAllCompleted(this, new Get_PODetailsAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_PO_Noted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Update_PO_Noted(int POID, int UserId) {
            object[] results = this.Invoke("Update_PO_Noted", new object[] {
                        POID,
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Update_PO_NotedAsync(int POID, int UserId) {
            this.Update_PO_NotedAsync(POID, UserId, null);
        }
        
        /// <remarks/>
        public void Update_PO_NotedAsync(int POID, int UserId, object userState) {
            if ((this.Update_PO_NotedOperationCompleted == null)) {
                this.Update_PO_NotedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_PO_NotedOperationCompleted);
            }
            this.InvokeAsync("Update_PO_Noted", new object[] {
                        POID,
                        UserId}, this.Update_PO_NotedOperationCompleted, userState);
        }
        
        private void OnUpdate_PO_NotedOperationCompleted(object arg) {
            if ((this.Update_PO_NotedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_PO_NotedCompleted(this, new Update_PO_NotedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_PO_Approved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Update_PO_Approved(int POID, int UserId) {
            object[] results = this.Invoke("Update_PO_Approved", new object[] {
                        POID,
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Update_PO_ApprovedAsync(int POID, int UserId) {
            this.Update_PO_ApprovedAsync(POID, UserId, null);
        }
        
        /// <remarks/>
        public void Update_PO_ApprovedAsync(int POID, int UserId, object userState) {
            if ((this.Update_PO_ApprovedOperationCompleted == null)) {
                this.Update_PO_ApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_PO_ApprovedOperationCompleted);
            }
            this.InvokeAsync("Update_PO_Approved", new object[] {
                        POID,
                        UserId}, this.Update_PO_ApprovedOperationCompleted, userState);
        }
        
        private void OnUpdate_PO_ApprovedOperationCompleted(object arg) {
            if ((this.Update_PO_ApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_PO_ApprovedCompleted(this, new Update_PO_ApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertMRIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertMRIS(string xml1, string xml2) {
            object[] results = this.Invoke("InsertMRIS", new object[] {
                        xml1,
                        xml2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMRISAsync(string xml1, string xml2) {
            this.InsertMRISAsync(xml1, xml2, null);
        }
        
        /// <remarks/>
        public void InsertMRISAsync(string xml1, string xml2, object userState) {
            if ((this.InsertMRISOperationCompleted == null)) {
                this.InsertMRISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMRISOperationCompleted);
            }
            this.InvokeAsync("InsertMRIS", new object[] {
                        xml1,
                        xml2}, this.InsertMRISOperationCompleted, userState);
        }
        
        private void OnInsertMRISOperationCompleted(object arg) {
            if ((this.InsertMRISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMRISCompleted(this, new InsertMRISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_MRIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_MRIS(int userID, string type) {
            object[] results = this.Invoke("Get_MRIS", new object[] {
                        userID,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_MRISAsync(int userID, string type) {
            this.Get_MRISAsync(userID, type, null);
        }
        
        /// <remarks/>
        public void Get_MRISAsync(int userID, string type, object userState) {
            if ((this.Get_MRISOperationCompleted == null)) {
                this.Get_MRISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_MRISOperationCompleted);
            }
            this.InvokeAsync("Get_MRIS", new object[] {
                        userID,
                        type}, this.Get_MRISOperationCompleted, userState);
        }
        
        private void OnGet_MRISOperationCompleted(object arg) {
            if ((this.Get_MRISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_MRISCompleted(this, new Get_MRISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_MRISDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_MRISDetails(int MRISID) {
            object[] results = this.Invoke("Get_MRISDetails", new object[] {
                        MRISID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_MRISDetailsAsync(int MRISID) {
            this.Get_MRISDetailsAsync(MRISID, null);
        }
        
        /// <remarks/>
        public void Get_MRISDetailsAsync(int MRISID, object userState) {
            if ((this.Get_MRISDetailsOperationCompleted == null)) {
                this.Get_MRISDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_MRISDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_MRISDetails", new object[] {
                        MRISID}, this.Get_MRISDetailsOperationCompleted, userState);
        }
        
        private void OnGet_MRISDetailsOperationCompleted(object arg) {
            if ((this.Get_MRISDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_MRISDetailsCompleted(this, new Get_MRISDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_MRIS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Update_MRIS(int MRISID, int type) {
            object[] results = this.Invoke("Update_MRIS", new object[] {
                        MRISID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Update_MRISAsync(int MRISID, int type) {
            this.Update_MRISAsync(MRISID, type, null);
        }
        
        /// <remarks/>
        public void Update_MRISAsync(int MRISID, int type, object userState) {
            if ((this.Update_MRISOperationCompleted == null)) {
                this.Update_MRISOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_MRISOperationCompleted);
            }
            this.InvokeAsync("Update_MRIS", new object[] {
                        MRISID,
                        type}, this.Update_MRISOperationCompleted, userState);
        }
        
        private void OnUpdate_MRISOperationCompleted(object arg) {
            if ((this.Update_MRISCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_MRISCompleted(this, new Update_MRISCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Select_PO_Approved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Select_PO_Approved() {
            object[] results = this.Invoke("Select_PO_Approved", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Select_PO_ApprovedAsync() {
            this.Select_PO_ApprovedAsync(null);
        }
        
        /// <remarks/>
        public void Select_PO_ApprovedAsync(object userState) {
            if ((this.Select_PO_ApprovedOperationCompleted == null)) {
                this.Select_PO_ApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelect_PO_ApprovedOperationCompleted);
            }
            this.InvokeAsync("Select_PO_Approved", new object[0], this.Select_PO_ApprovedOperationCompleted, userState);
        }
        
        private void OnSelect_PO_ApprovedOperationCompleted(object arg) {
            if ((this.Select_PO_ApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Select_PO_ApprovedCompleted(this, new Select_PO_ApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Pending_RR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Pending_RR(int userID) {
            object[] results = this.Invoke("Get_Pending_RR", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Pending_RRAsync(int userID) {
            this.Get_Pending_RRAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_Pending_RRAsync(int userID, object userState) {
            if ((this.Get_Pending_RROperationCompleted == null)) {
                this.Get_Pending_RROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Pending_RROperationCompleted);
            }
            this.InvokeAsync("Get_Pending_RR", new object[] {
                        userID}, this.Get_Pending_RROperationCompleted, userState);
        }
        
        private void OnGet_Pending_RROperationCompleted(object arg) {
            if ((this.Get_Pending_RRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Pending_RRCompleted(this, new Get_Pending_RRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertRI(string xml1, string xml2) {
            object[] results = this.Invoke("InsertRI", new object[] {
                        xml1,
                        xml2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRIAsync(string xml1, string xml2) {
            this.InsertRIAsync(xml1, xml2, null);
        }
        
        /// <remarks/>
        public void InsertRIAsync(string xml1, string xml2, object userState) {
            if ((this.InsertRIOperationCompleted == null)) {
                this.InsertRIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRIOperationCompleted);
            }
            this.InvokeAsync("InsertRI", new object[] {
                        xml1,
                        xml2}, this.InsertRIOperationCompleted, userState);
        }
        
        private void OnInsertRIOperationCompleted(object arg) {
            if ((this.InsertRICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRICompleted(this, new InsertRICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RI(int userID, string type) {
            object[] results = this.Invoke("Get_RI", new object[] {
                        userID,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RIAsync(int userID, string type) {
            this.Get_RIAsync(userID, type, null);
        }
        
        /// <remarks/>
        public void Get_RIAsync(int userID, string type, object userState) {
            if ((this.Get_RIOperationCompleted == null)) {
                this.Get_RIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RIOperationCompleted);
            }
            this.InvokeAsync("Get_RI", new object[] {
                        userID,
                        type}, this.Get_RIOperationCompleted, userState);
        }
        
        private void OnGet_RIOperationCompleted(object arg) {
            if ((this.Get_RICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RICompleted(this, new Get_RICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RIDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RIDetails(int RIID) {
            object[] results = this.Invoke("Get_RIDetails", new object[] {
                        RIID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RIDetailsAsync(int RIID) {
            this.Get_RIDetailsAsync(RIID, null);
        }
        
        /// <remarks/>
        public void Get_RIDetailsAsync(int RIID, object userState) {
            if ((this.Get_RIDetailsOperationCompleted == null)) {
                this.Get_RIDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RIDetailsOperationCompleted);
            }
            this.InvokeAsync("Get_RIDetails", new object[] {
                        RIID}, this.Get_RIDetailsOperationCompleted, userState);
        }
        
        private void OnGet_RIDetailsOperationCompleted(object arg) {
            if ((this.Get_RIDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RIDetailsCompleted(this, new Get_RIDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_RI", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Update_RI(int RIID, int type) {
            object[] results = this.Invoke("Update_RI", new object[] {
                        RIID,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Update_RIAsync(int RIID, int type) {
            this.Update_RIAsync(RIID, type, null);
        }
        
        /// <remarks/>
        public void Update_RIAsync(int RIID, int type, object userState) {
            if ((this.Update_RIOperationCompleted == null)) {
                this.Update_RIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_RIOperationCompleted);
            }
            this.InvokeAsync("Update_RI", new object[] {
                        RIID,
                        type}, this.Update_RIOperationCompleted, userState);
        }
        
        private void OnUpdate_RIOperationCompleted(object arg) {
            if ((this.Update_RICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_RICompleted(this, new Update_RICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertReceivingReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertReceivingReport(string xml1, string xml2) {
            object[] results = this.Invoke("InsertReceivingReport", new object[] {
                        xml1,
                        xml2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertReceivingReportAsync(string xml1, string xml2) {
            this.InsertReceivingReportAsync(xml1, xml2, null);
        }
        
        /// <remarks/>
        public void InsertReceivingReportAsync(string xml1, string xml2, object userState) {
            if ((this.InsertReceivingReportOperationCompleted == null)) {
                this.InsertReceivingReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertReceivingReportOperationCompleted);
            }
            this.InvokeAsync("InsertReceivingReport", new object[] {
                        xml1,
                        xml2}, this.InsertReceivingReportOperationCompleted, userState);
        }
        
        private void OnInsertReceivingReportOperationCompleted(object arg) {
            if ((this.InsertReceivingReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertReceivingReportCompleted(this, new InsertReceivingReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRRDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertRRDetails(string xml, int RRID) {
            object[] results = this.Invoke("InsertRRDetails", new object[] {
                        xml,
                        RRID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRRDetailsAsync(string xml, int RRID) {
            this.InsertRRDetailsAsync(xml, RRID, null);
        }
        
        /// <remarks/>
        public void InsertRRDetailsAsync(string xml, int RRID, object userState) {
            if ((this.InsertRRDetailsOperationCompleted == null)) {
                this.InsertRRDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRRDetailsOperationCompleted);
            }
            this.InvokeAsync("InsertRRDetails", new object[] {
                        xml,
                        RRID}, this.InsertRRDetailsOperationCompleted, userState);
        }
        
        private void OnInsertRRDetailsOperationCompleted(object arg) {
            if ((this.InsertRRDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRRDetailsCompleted(this, new InsertRRDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RR_for_Noted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RR_for_Noted(int userID) {
            object[] results = this.Invoke("Get_RR_for_Noted", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RR_for_NotedAsync(int userID) {
            this.Get_RR_for_NotedAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_RR_for_NotedAsync(int userID, object userState) {
            if ((this.Get_RR_for_NotedOperationCompleted == null)) {
                this.Get_RR_for_NotedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RR_for_NotedOperationCompleted);
            }
            this.InvokeAsync("Get_RR_for_Noted", new object[] {
                        userID}, this.Get_RR_for_NotedOperationCompleted, userState);
        }
        
        private void OnGet_RR_for_NotedOperationCompleted(object arg) {
            if ((this.Get_RR_for_NotedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RR_for_NotedCompleted(this, new Get_RR_for_NotedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_RR_Noted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Update_RR_Noted(int RRID, int UserId) {
            object[] results = this.Invoke("Update_RR_Noted", new object[] {
                        RRID,
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Update_RR_NotedAsync(int RRID, int UserId) {
            this.Update_RR_NotedAsync(RRID, UserId, null);
        }
        
        /// <remarks/>
        public void Update_RR_NotedAsync(int RRID, int UserId, object userState) {
            if ((this.Update_RR_NotedOperationCompleted == null)) {
                this.Update_RR_NotedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_RR_NotedOperationCompleted);
            }
            this.InvokeAsync("Update_RR_Noted", new object[] {
                        RRID,
                        UserId}, this.Update_RR_NotedOperationCompleted, userState);
        }
        
        private void OnUpdate_RR_NotedOperationCompleted(object arg) {
            if ((this.Update_RR_NotedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_RR_NotedCompleted(this, new Update_RR_NotedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_RR_Approved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Update_RR_Approved(int RRID, int UserId) {
            object[] results = this.Invoke("Update_RR_Approved", new object[] {
                        RRID,
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Update_RR_ApprovedAsync(int RRID, int UserId) {
            this.Update_RR_ApprovedAsync(RRID, UserId, null);
        }
        
        /// <remarks/>
        public void Update_RR_ApprovedAsync(int RRID, int UserId, object userState) {
            if ((this.Update_RR_ApprovedOperationCompleted == null)) {
                this.Update_RR_ApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_RR_ApprovedOperationCompleted);
            }
            this.InvokeAsync("Update_RR_Approved", new object[] {
                        RRID,
                        UserId}, this.Update_RR_ApprovedOperationCompleted, userState);
        }
        
        private void OnUpdate_RR_ApprovedOperationCompleted(object arg) {
            if ((this.Update_RR_ApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_RR_ApprovedCompleted(this, new Update_RR_ApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RR_for_Approved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RR_for_Approved(int userID) {
            object[] results = this.Invoke("Get_RR_for_Approved", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RR_for_ApprovedAsync(int userID) {
            this.Get_RR_for_ApprovedAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_RR_for_ApprovedAsync(int userID, object userState) {
            if ((this.Get_RR_for_ApprovedOperationCompleted == null)) {
                this.Get_RR_for_ApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RR_for_ApprovedOperationCompleted);
            }
            this.InvokeAsync("Get_RR_for_Approved", new object[] {
                        userID}, this.Get_RR_for_ApprovedOperationCompleted, userState);
        }
        
        private void OnGet_RR_for_ApprovedOperationCompleted(object arg) {
            if ((this.Get_RR_for_ApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RR_for_ApprovedCompleted(this, new Get_RR_for_ApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSignatory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSignatory() {
            object[] results = this.Invoke("GetSignatory", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignatoryAsync() {
            this.GetSignatoryAsync(null);
        }
        
        /// <remarks/>
        public void GetSignatoryAsync(object userState) {
            if ((this.GetSignatoryOperationCompleted == null)) {
                this.GetSignatoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignatoryOperationCompleted);
            }
            this.InvokeAsync("GetSignatory", new object[0], this.GetSignatoryOperationCompleted, userState);
        }
        
        private void OnGetSignatoryOperationCompleted(object arg) {
            if ((this.GetSignatoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignatoryCompleted(this, new GetSignatoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSignatoryByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSignatoryByUserId(int pUserId, string pTransactionType, string pSignatoryType) {
            object[] results = this.Invoke("GetSignatoryByUserId", new object[] {
                        pUserId,
                        pTransactionType,
                        pSignatoryType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignatoryByUserIdAsync(int pUserId, string pTransactionType, string pSignatoryType) {
            this.GetSignatoryByUserIdAsync(pUserId, pTransactionType, pSignatoryType, null);
        }
        
        /// <remarks/>
        public void GetSignatoryByUserIdAsync(int pUserId, string pTransactionType, string pSignatoryType, object userState) {
            if ((this.GetSignatoryByUserIdOperationCompleted == null)) {
                this.GetSignatoryByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignatoryByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetSignatoryByUserId", new object[] {
                        pUserId,
                        pTransactionType,
                        pSignatoryType}, this.GetSignatoryByUserIdOperationCompleted, userState);
        }
        
        private void OnGetSignatoryByUserIdOperationCompleted(object arg) {
            if ((this.GetSignatoryByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignatoryByUserIdCompleted(this, new GetSignatoryByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSignatory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertSignatory(int pUserId, string pTransType, string pSignType) {
            object[] results = this.Invoke("InsertSignatory", new object[] {
                        pUserId,
                        pTransType,
                        pSignType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSignatoryAsync(int pUserId, string pTransType, string pSignType) {
            this.InsertSignatoryAsync(pUserId, pTransType, pSignType, null);
        }
        
        /// <remarks/>
        public void InsertSignatoryAsync(int pUserId, string pTransType, string pSignType, object userState) {
            if ((this.InsertSignatoryOperationCompleted == null)) {
                this.InsertSignatoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSignatoryOperationCompleted);
            }
            this.InvokeAsync("InsertSignatory", new object[] {
                        pUserId,
                        pTransType,
                        pSignType}, this.InsertSignatoryOperationCompleted, userState);
        }
        
        private void OnInsertSignatoryOperationCompleted(object arg) {
            if ((this.InsertSignatoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSignatoryCompleted(this, new InsertSignatoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSignatory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateSignatory(int pSignId, int pUserId, string pTransType, string pSignType) {
            object[] results = this.Invoke("UpdateSignatory", new object[] {
                        pSignId,
                        pUserId,
                        pTransType,
                        pSignType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSignatoryAsync(int pSignId, int pUserId, string pTransType, string pSignType) {
            this.UpdateSignatoryAsync(pSignId, pUserId, pTransType, pSignType, null);
        }
        
        /// <remarks/>
        public void UpdateSignatoryAsync(int pSignId, int pUserId, string pTransType, string pSignType, object userState) {
            if ((this.UpdateSignatoryOperationCompleted == null)) {
                this.UpdateSignatoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSignatoryOperationCompleted);
            }
            this.InvokeAsync("UpdateSignatory", new object[] {
                        pSignId,
                        pUserId,
                        pTransType,
                        pSignType}, this.UpdateSignatoryOperationCompleted, userState);
        }
        
        private void OnUpdateSignatoryOperationCompleted(object arg) {
            if ((this.UpdateSignatoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSignatoryCompleted(this, new UpdateSignatoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSignatory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSignatory(int pSignId) {
            object[] results = this.Invoke("DeleteSignatory", new object[] {
                        pSignId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSignatoryAsync(int pSignId) {
            this.DeleteSignatoryAsync(pSignId, null);
        }
        
        /// <remarks/>
        public void DeleteSignatoryAsync(int pSignId, object userState) {
            if ((this.DeleteSignatoryOperationCompleted == null)) {
                this.DeleteSignatoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSignatoryOperationCompleted);
            }
            this.InvokeAsync("DeleteSignatory", new object[] {
                        pSignId}, this.DeleteSignatoryOperationCompleted, userState);
        }
        
        private void OnDeleteSignatoryOperationCompleted(object arg) {
            if ((this.DeleteSignatoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSignatoryCompleted(this, new DeleteSignatoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Version", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Version() {
            object[] results = this.Invoke("Version", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersionAsync() {
            this.VersionAsync(null);
        }
        
        /// <remarks/>
        public void VersionAsync(object userState) {
            if ((this.VersionOperationCompleted == null)) {
                this.VersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionOperationCompleted);
            }
            this.InvokeAsync("Version", new object[0], this.VersionOperationCompleted, userState);
        }
        
        private void OnVersionOperationCompleted(object arg) {
            if ((this.VersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionCompleted(this, new VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerifyUserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerifyUserLogin(string username, string password) {
            object[] results = this.Invoke("VerifyUserLogin", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyUserLoginAsync(string username, string password) {
            this.VerifyUserLoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void VerifyUserLoginAsync(string username, string password, object userState) {
            if ((this.VerifyUserLoginOperationCompleted == null)) {
                this.VerifyUserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyUserLoginOperationCompleted);
            }
            this.InvokeAsync("VerifyUserLogin", new object[] {
                        username,
                        password}, this.VerifyUserLoginOperationCompleted, userState);
        }
        
        private void OnVerifyUserLoginOperationCompleted(object arg) {
            if ((this.VerifyUserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyUserLoginCompleted(this, new VerifyUserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectDepartment() {
            object[] results = this.Invoke("SelectDepartment", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectDepartmentAsync() {
            this.SelectDepartmentAsync(null);
        }
        
        /// <remarks/>
        public void SelectDepartmentAsync(object userState) {
            if ((this.SelectDepartmentOperationCompleted == null)) {
                this.SelectDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectDepartmentOperationCompleted);
            }
            this.InvokeAsync("SelectDepartment", new object[0], this.SelectDepartmentOperationCompleted, userState);
        }
        
        private void OnSelectDepartmentOperationCompleted(object arg) {
            if ((this.SelectDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectDepartmentCompleted(this, new SelectDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertDepartment(string branchName, string status) {
            object[] results = this.Invoke("InsertDepartment", new object[] {
                        branchName,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDepartmentAsync(string branchName, string status) {
            this.InsertDepartmentAsync(branchName, status, null);
        }
        
        /// <remarks/>
        public void InsertDepartmentAsync(string branchName, string status, object userState) {
            if ((this.InsertDepartmentOperationCompleted == null)) {
                this.InsertDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDepartmentOperationCompleted);
            }
            this.InvokeAsync("InsertDepartment", new object[] {
                        branchName,
                        status}, this.InsertDepartmentOperationCompleted, userState);
        }
        
        private void OnInsertDepartmentOperationCompleted(object arg) {
            if ((this.InsertDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDepartmentCompleted(this, new InsertDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDepartment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateDepartment(int id, string status) {
            object[] results = this.Invoke("UpdateDepartment", new object[] {
                        id,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(int id, string status) {
            this.UpdateDepartmentAsync(id, status, null);
        }
        
        /// <remarks/>
        public void UpdateDepartmentAsync(int id, string status, object userState) {
            if ((this.UpdateDepartmentOperationCompleted == null)) {
                this.UpdateDepartmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDepartmentOperationCompleted);
            }
            this.InvokeAsync("UpdateDepartment", new object[] {
                        id,
                        status}, this.UpdateDepartmentOperationCompleted, userState);
        }
        
        private void OnUpdateDepartmentOperationCompleted(object arg) {
            if ((this.UpdateDepartmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDepartmentCompleted(this, new UpdateDepartmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectBranch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectBranch() {
            object[] results = this.Invoke("SelectBranch", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectBranchAsync() {
            this.SelectBranchAsync(null);
        }
        
        /// <remarks/>
        public void SelectBranchAsync(object userState) {
            if ((this.SelectBranchOperationCompleted == null)) {
                this.SelectBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectBranchOperationCompleted);
            }
            this.InvokeAsync("SelectBranch", new object[0], this.SelectBranchOperationCompleted, userState);
        }
        
        private void OnSelectBranchOperationCompleted(object arg) {
            if ((this.SelectBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectBranchCompleted(this, new SelectBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBranch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertBranch(string branchName, string status) {
            object[] results = this.Invoke("InsertBranch", new object[] {
                        branchName,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBranchAsync(string branchName, string status) {
            this.InsertBranchAsync(branchName, status, null);
        }
        
        /// <remarks/>
        public void InsertBranchAsync(string branchName, string status, object userState) {
            if ((this.InsertBranchOperationCompleted == null)) {
                this.InsertBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBranchOperationCompleted);
            }
            this.InvokeAsync("InsertBranch", new object[] {
                        branchName,
                        status}, this.InsertBranchOperationCompleted, userState);
        }
        
        private void OnInsertBranchOperationCompleted(object arg) {
            if ((this.InsertBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBranchCompleted(this, new InsertBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBranch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateBranch(int id, string status) {
            object[] results = this.Invoke("UpdateBranch", new object[] {
                        id,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateBranchAsync(int id, string status) {
            this.UpdateBranchAsync(id, status, null);
        }
        
        /// <remarks/>
        public void UpdateBranchAsync(int id, string status, object userState) {
            if ((this.UpdateBranchOperationCompleted == null)) {
                this.UpdateBranchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateBranchOperationCompleted);
            }
            this.InvokeAsync("UpdateBranch", new object[] {
                        id,
                        status}, this.UpdateBranchOperationCompleted, userState);
        }
        
        private void OnUpdateBranchOperationCompleted(object arg) {
            if ((this.UpdateBranchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateBranchCompleted(this, new UpdateBranchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectPosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectPosition() {
            object[] results = this.Invoke("SelectPosition", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectPositionAsync() {
            this.SelectPositionAsync(null);
        }
        
        /// <remarks/>
        public void SelectPositionAsync(object userState) {
            if ((this.SelectPositionOperationCompleted == null)) {
                this.SelectPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectPositionOperationCompleted);
            }
            this.InvokeAsync("SelectPosition", new object[0], this.SelectPositionOperationCompleted, userState);
        }
        
        private void OnSelectPositionOperationCompleted(object arg) {
            if ((this.SelectPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectPositionCompleted(this, new SelectPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertPosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertPosition(string branchName, string status) {
            object[] results = this.Invoke("InsertPosition", new object[] {
                        branchName,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPositionAsync(string branchName, string status) {
            this.InsertPositionAsync(branchName, status, null);
        }
        
        /// <remarks/>
        public void InsertPositionAsync(string branchName, string status, object userState) {
            if ((this.InsertPositionOperationCompleted == null)) {
                this.InsertPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPositionOperationCompleted);
            }
            this.InvokeAsync("InsertPosition", new object[] {
                        branchName,
                        status}, this.InsertPositionOperationCompleted, userState);
        }
        
        private void OnInsertPositionOperationCompleted(object arg) {
            if ((this.InsertPositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPositionCompleted(this, new InsertPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePosition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdatePosition(int id, string status) {
            object[] results = this.Invoke("UpdatePosition", new object[] {
                        id,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePositionAsync(int id, string status) {
            this.UpdatePositionAsync(id, status, null);
        }
        
        /// <remarks/>
        public void UpdatePositionAsync(int id, string status, object userState) {
            if ((this.UpdatePositionOperationCompleted == null)) {
                this.UpdatePositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePositionOperationCompleted);
            }
            this.InvokeAsync("UpdatePosition", new object[] {
                        id,
                        status}, this.UpdatePositionOperationCompleted, userState);
        }
        
        private void OnUpdatePositionOperationCompleted(object arg) {
            if ((this.UpdatePositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePositionCompleted(this, new UpdatePositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterUserAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RegisterUserAccount(string fName, string mName, string lName, string addr, string city, string mNumber, string username, string password, int posID, int depID, int brID, string signature) {
            object[] results = this.Invoke("RegisterUserAccount", new object[] {
                        fName,
                        mName,
                        lName,
                        addr,
                        city,
                        mNumber,
                        username,
                        password,
                        posID,
                        depID,
                        brID,
                        signature});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterUserAccountAsync(string fName, string mName, string lName, string addr, string city, string mNumber, string username, string password, int posID, int depID, int brID, string signature) {
            this.RegisterUserAccountAsync(fName, mName, lName, addr, city, mNumber, username, password, posID, depID, brID, signature, null);
        }
        
        /// <remarks/>
        public void RegisterUserAccountAsync(string fName, string mName, string lName, string addr, string city, string mNumber, string username, string password, int posID, int depID, int brID, string signature, object userState) {
            if ((this.RegisterUserAccountOperationCompleted == null)) {
                this.RegisterUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterUserAccountOperationCompleted);
            }
            this.InvokeAsync("RegisterUserAccount", new object[] {
                        fName,
                        mName,
                        lName,
                        addr,
                        city,
                        mNumber,
                        username,
                        password,
                        posID,
                        depID,
                        brID,
                        signature}, this.RegisterUserAccountOperationCompleted, userState);
        }
        
        private void OnRegisterUserAccountOperationCompleted(object arg) {
            if ((this.RegisterUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterUserAccountCompleted(this, new RegisterUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectUserByUserName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectUserByUserName(string username) {
            object[] results = this.Invoke("SelectUserByUserName", new object[] {
                        username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectUserByUserNameAsync(string username) {
            this.SelectUserByUserNameAsync(username, null);
        }
        
        /// <remarks/>
        public void SelectUserByUserNameAsync(string username, object userState) {
            if ((this.SelectUserByUserNameOperationCompleted == null)) {
                this.SelectUserByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectUserByUserNameOperationCompleted);
            }
            this.InvokeAsync("SelectUserByUserName", new object[] {
                        username}, this.SelectUserByUserNameOperationCompleted, userState);
        }
        
        private void OnSelectUserByUserNameOperationCompleted(object arg) {
            if ((this.SelectUserByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectUserByUserNameCompleted(this, new SelectUserByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectUserByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectUserByUserID(int userID) {
            object[] results = this.Invoke("SelectUserByUserID", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectUserByUserIDAsync(int userID) {
            this.SelectUserByUserIDAsync(userID, null);
        }
        
        /// <remarks/>
        public void SelectUserByUserIDAsync(int userID, object userState) {
            if ((this.SelectUserByUserIDOperationCompleted == null)) {
                this.SelectUserByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectUserByUserIDOperationCompleted);
            }
            this.InvokeAsync("SelectUserByUserID", new object[] {
                        userID}, this.SelectUserByUserIDOperationCompleted, userState);
        }
        
        private void OnSelectUserByUserIDOperationCompleted(object arg) {
            if ((this.SelectUserByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectUserByUserIDCompleted(this, new SelectUserByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectAllUser() {
            object[] results = this.Invoke("SelectAllUser", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllUserAsync() {
            this.SelectAllUserAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllUserAsync(object userState) {
            if ((this.SelectAllUserOperationCompleted == null)) {
                this.SelectAllUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllUserOperationCompleted);
            }
            this.InvokeAsync("SelectAllUser", new object[0], this.SelectAllUserOperationCompleted, userState);
        }
        
        private void OnSelectAllUserOperationCompleted(object arg) {
            if ((this.SelectAllUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllUserCompleted(this, new SelectAllUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllUserV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectAllUserV2() {
            object[] results = this.Invoke("SelectAllUserV2", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllUserV2Async() {
            this.SelectAllUserV2Async(null);
        }
        
        /// <remarks/>
        public void SelectAllUserV2Async(object userState) {
            if ((this.SelectAllUserV2OperationCompleted == null)) {
                this.SelectAllUserV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllUserV2OperationCompleted);
            }
            this.InvokeAsync("SelectAllUserV2", new object[0], this.SelectAllUserV2OperationCompleted, userState);
        }
        
        private void OnSelectAllUserV2OperationCompleted(object arg) {
            if ((this.SelectAllUserV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllUserV2Completed(this, new SelectAllUserV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAccessModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAccessModule(string Desc) {
            object[] results = this.Invoke("InsertAccessModule", new object[] {
                        Desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAccessModuleAsync(string Desc) {
            this.InsertAccessModuleAsync(Desc, null);
        }
        
        /// <remarks/>
        public void InsertAccessModuleAsync(string Desc, object userState) {
            if ((this.InsertAccessModuleOperationCompleted == null)) {
                this.InsertAccessModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAccessModuleOperationCompleted);
            }
            this.InvokeAsync("InsertAccessModule", new object[] {
                        Desc}, this.InsertAccessModuleOperationCompleted, userState);
        }
        
        private void OnInsertAccessModuleOperationCompleted(object arg) {
            if ((this.InsertAccessModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAccessModuleCompleted(this, new InsertAccessModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUserAccessRights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertUserAccessRights(int userID, int ModuleID) {
            object[] results = this.Invoke("InsertUserAccessRights", new object[] {
                        userID,
                        ModuleID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUserAccessRightsAsync(int userID, int ModuleID) {
            this.InsertUserAccessRightsAsync(userID, ModuleID, null);
        }
        
        /// <remarks/>
        public void InsertUserAccessRightsAsync(int userID, int ModuleID, object userState) {
            if ((this.InsertUserAccessRightsOperationCompleted == null)) {
                this.InsertUserAccessRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUserAccessRightsOperationCompleted);
            }
            this.InvokeAsync("InsertUserAccessRights", new object[] {
                        userID,
                        ModuleID}, this.InsertUserAccessRightsOperationCompleted, userState);
        }
        
        private void OnInsertUserAccessRightsOperationCompleted(object arg) {
            if ((this.InsertUserAccessRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUserAccessRightsCompleted(this, new InsertUserAccessRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUserAccessRights", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteUserAccessRights(int userID, int ModuleID) {
            object[] results = this.Invoke("DeleteUserAccessRights", new object[] {
                        userID,
                        ModuleID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAccessRightsAsync(int userID, int ModuleID) {
            this.DeleteUserAccessRightsAsync(userID, ModuleID, null);
        }
        
        /// <remarks/>
        public void DeleteUserAccessRightsAsync(int userID, int ModuleID, object userState) {
            if ((this.DeleteUserAccessRightsOperationCompleted == null)) {
                this.DeleteUserAccessRightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserAccessRightsOperationCompleted);
            }
            this.InvokeAsync("DeleteUserAccessRights", new object[] {
                        userID,
                        ModuleID}, this.DeleteUserAccessRightsOperationCompleted, userState);
        }
        
        private void OnDeleteUserAccessRightsOperationCompleted(object arg) {
            if ((this.DeleteUserAccessRightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserAccessRightsCompleted(this, new DeleteUserAccessRightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectUserAccessModule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectUserAccessModule(int userID) {
            object[] results = this.Invoke("SelectUserAccessModule", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectUserAccessModuleAsync(int userID) {
            this.SelectUserAccessModuleAsync(userID, null);
        }
        
        /// <remarks/>
        public void SelectUserAccessModuleAsync(int userID, object userState) {
            if ((this.SelectUserAccessModuleOperationCompleted == null)) {
                this.SelectUserAccessModuleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectUserAccessModuleOperationCompleted);
            }
            this.InvokeAsync("SelectUserAccessModule", new object[] {
                        userID}, this.SelectUserAccessModuleOperationCompleted, userState);
        }
        
        private void OnSelectUserAccessModuleOperationCompleted(object arg) {
            if ((this.SelectUserAccessModuleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectUserAccessModuleCompleted(this, new SelectUserAccessModuleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUser(string mobileNum, int posID, int deptID, int brID, string sign, int id, string username) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        mobileNum,
                        posID,
                        deptID,
                        brID,
                        sign,
                        id,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string mobileNum, int posID, int deptID, int brID, string sign, int id, string username) {
            this.UpdateUserAsync(mobileNum, posID, deptID, brID, sign, id, username, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(string mobileNum, int posID, int deptID, int brID, string sign, int id, string username, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        mobileNum,
                        posID,
                        deptID,
                        brID,
                        sign,
                        id,
                        username}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateUserPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateUserPassword(string NewPass, string oldPass, int id, string username) {
            object[] results = this.Invoke("UpdateUserPassword", new object[] {
                        NewPass,
                        oldPass,
                        id,
                        username});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(string NewPass, string oldPass, int id, string username) {
            this.UpdateUserPasswordAsync(NewPass, oldPass, id, username, null);
        }
        
        /// <remarks/>
        public void UpdateUserPasswordAsync(string NewPass, string oldPass, int id, string username, object userState) {
            if ((this.UpdateUserPasswordOperationCompleted == null)) {
                this.UpdateUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserPasswordOperationCompleted);
            }
            this.InvokeAsync("UpdateUserPassword", new object[] {
                        NewPass,
                        oldPass,
                        id,
                        username}, this.UpdateUserPasswordOperationCompleted, userState);
        }
        
        private void OnUpdateUserPasswordOperationCompleted(object arg) {
            if ((this.UpdateUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserPasswordCompleted(this, new UpdateUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertSupplier(string data) {
            object[] results = this.Invoke("InsertSupplier", new object[] {
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSupplierAsync(string data) {
            this.InsertSupplierAsync(data, null);
        }
        
        /// <remarks/>
        public void InsertSupplierAsync(string data, object userState) {
            if ((this.InsertSupplierOperationCompleted == null)) {
                this.InsertSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSupplierOperationCompleted);
            }
            this.InvokeAsync("InsertSupplier", new object[] {
                        data}, this.InsertSupplierOperationCompleted, userState);
        }
        
        private void OnInsertSupplierOperationCompleted(object arg) {
            if ((this.InsertSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSupplierCompleted(this, new InsertSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertAccounts(string data) {
            object[] results = this.Invoke("InsertAccounts", new object[] {
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAccountsAsync(string data) {
            this.InsertAccountsAsync(data, null);
        }
        
        /// <remarks/>
        public void InsertAccountsAsync(string data, object userState) {
            if ((this.InsertAccountsOperationCompleted == null)) {
                this.InsertAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAccountsOperationCompleted);
            }
            this.InvokeAsync("InsertAccounts", new object[] {
                        data}, this.InsertAccountsOperationCompleted, userState);
        }
        
        private void OnInsertAccountsOperationCompleted(object arg) {
            if ((this.InsertAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAccountsCompleted(this, new InsertAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertItems(string data) {
            object[] results = this.Invoke("InsertItems", new object[] {
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertItemsAsync(string data) {
            this.InsertItemsAsync(data, null);
        }
        
        /// <remarks/>
        public void InsertItemsAsync(string data, object userState) {
            if ((this.InsertItemsOperationCompleted == null)) {
                this.InsertItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertItemsOperationCompleted);
            }
            this.InvokeAsync("InsertItems", new object[] {
                        data}, this.InsertItemsOperationCompleted, userState);
        }
        
        private void OnInsertItemsOperationCompleted(object arg) {
            if ((this.InsertItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertItemsCompleted(this, new InsertItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectSupplier() {
            object[] results = this.Invoke("SelectSupplier", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectSupplierAsync() {
            this.SelectSupplierAsync(null);
        }
        
        /// <remarks/>
        public void SelectSupplierAsync(object userState) {
            if ((this.SelectSupplierOperationCompleted == null)) {
                this.SelectSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectSupplierOperationCompleted);
            }
            this.InvokeAsync("SelectSupplier", new object[0], this.SelectSupplierOperationCompleted, userState);
        }
        
        private void OnSelectSupplierOperationCompleted(object arg) {
            if ((this.SelectSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectSupplierCompleted(this, new SelectSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSupplier(int id, string supplierCode, string supplierCodeTag, string supplierName, string businessAddress, string tin, string cellNumber, string telNumber, string contactPerson, string productsAvailed, string pt, string country, string supplierCurrency) {
            object[] results = this.Invoke("UpdateSupplier", new object[] {
                        id,
                        supplierCode,
                        supplierCodeTag,
                        supplierName,
                        businessAddress,
                        tin,
                        cellNumber,
                        telNumber,
                        contactPerson,
                        productsAvailed,
                        pt,
                        country,
                        supplierCurrency});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSupplierAsync(int id, string supplierCode, string supplierCodeTag, string supplierName, string businessAddress, string tin, string cellNumber, string telNumber, string contactPerson, string productsAvailed, string pt, string country, string supplierCurrency) {
            this.UpdateSupplierAsync(id, supplierCode, supplierCodeTag, supplierName, businessAddress, tin, cellNumber, telNumber, contactPerson, productsAvailed, pt, country, supplierCurrency, null);
        }
        
        /// <remarks/>
        public void UpdateSupplierAsync(int id, string supplierCode, string supplierCodeTag, string supplierName, string businessAddress, string tin, string cellNumber, string telNumber, string contactPerson, string productsAvailed, string pt, string country, string supplierCurrency, object userState) {
            if ((this.UpdateSupplierOperationCompleted == null)) {
                this.UpdateSupplierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSupplierOperationCompleted);
            }
            this.InvokeAsync("UpdateSupplier", new object[] {
                        id,
                        supplierCode,
                        supplierCodeTag,
                        supplierName,
                        businessAddress,
                        tin,
                        cellNumber,
                        telNumber,
                        contactPerson,
                        productsAvailed,
                        pt,
                        country,
                        supplierCurrency}, this.UpdateSupplierOperationCompleted, userState);
        }
        
        private void OnUpdateSupplierOperationCompleted(object arg) {
            if ((this.UpdateSupplierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSupplierCompleted(this, new UpdateSupplierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateAccount(int id, string acode, string pcc, string description, int debitCredit, int acodeid, string sl, string groupBy) {
            object[] results = this.Invoke("UpdateAccount", new object[] {
                        id,
                        acode,
                        pcc,
                        description,
                        debitCredit,
                        acodeid,
                        sl,
                        groupBy});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(int id, string acode, string pcc, string description, int debitCredit, int acodeid, string sl, string groupBy) {
            this.UpdateAccountAsync(id, acode, pcc, description, debitCredit, acodeid, sl, groupBy, null);
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(int id, string acode, string pcc, string description, int debitCredit, int acodeid, string sl, string groupBy, object userState) {
            if ((this.UpdateAccountOperationCompleted == null)) {
                this.UpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateAccount", new object[] {
                        id,
                        acode,
                        pcc,
                        description,
                        debitCredit,
                        acodeid,
                        sl,
                        groupBy}, this.UpdateAccountOperationCompleted, userState);
        }
        
        private void OnUpdateAccountOperationCompleted(object arg) {
            if ((this.UpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountCompleted(this, new UpdateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectAllAccount() {
            object[] results = this.Invoke("SelectAllAccount", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllAccountAsync() {
            this.SelectAllAccountAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllAccountAsync(object userState) {
            if ((this.SelectAllAccountOperationCompleted == null)) {
                this.SelectAllAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllAccountOperationCompleted);
            }
            this.InvokeAsync("SelectAllAccount", new object[0], this.SelectAllAccountOperationCompleted, userState);
        }
        
        private void OnSelectAllAccountOperationCompleted(object arg) {
            if ((this.SelectAllAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllAccountCompleted(this, new SelectAllAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectAllItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectAllItem() {
            object[] results = this.Invoke("SelectAllItem", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllItemAsync() {
            this.SelectAllItemAsync(null);
        }
        
        /// <remarks/>
        public void SelectAllItemAsync(object userState) {
            if ((this.SelectAllItemOperationCompleted == null)) {
                this.SelectAllItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllItemOperationCompleted);
            }
            this.InvokeAsync("SelectAllItem", new object[0], this.SelectAllItemOperationCompleted, userState);
        }
        
        private void OnSelectAllItemOperationCompleted(object arg) {
            if ((this.SelectAllItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllItemCompleted(this, new SelectAllItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectItemPerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectItemPerID(int id) {
            object[] results = this.Invoke("SelectItemPerID", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectItemPerIDAsync(int id) {
            this.SelectItemPerIDAsync(id, null);
        }
        
        /// <remarks/>
        public void SelectItemPerIDAsync(int id, object userState) {
            if ((this.SelectItemPerIDOperationCompleted == null)) {
                this.SelectItemPerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectItemPerIDOperationCompleted);
            }
            this.InvokeAsync("SelectItemPerID", new object[] {
                        id}, this.SelectItemPerIDOperationCompleted, userState);
        }
        
        private void OnSelectItemPerIDOperationCompleted(object arg) {
            if ((this.SelectItemPerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectItemPerIDCompleted(this, new SelectItemPerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateItem(int id, string itemCode, string itemCodeTag, string itemName, string description, string brand, string unit, string supplierName, string ssLevel, string LTDelivery, string Inventory) {
            object[] results = this.Invoke("UpdateItem", new object[] {
                        id,
                        itemCode,
                        itemCodeTag,
                        itemName,
                        description,
                        brand,
                        unit,
                        supplierName,
                        ssLevel,
                        LTDelivery,
                        Inventory});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateItemAsync(int id, string itemCode, string itemCodeTag, string itemName, string description, string brand, string unit, string supplierName, string ssLevel, string LTDelivery, string Inventory) {
            this.UpdateItemAsync(id, itemCode, itemCodeTag, itemName, description, brand, unit, supplierName, ssLevel, LTDelivery, Inventory, null);
        }
        
        /// <remarks/>
        public void UpdateItemAsync(int id, string itemCode, string itemCodeTag, string itemName, string description, string brand, string unit, string supplierName, string ssLevel, string LTDelivery, string Inventory, object userState) {
            if ((this.UpdateItemOperationCompleted == null)) {
                this.UpdateItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateItemOperationCompleted);
            }
            this.InvokeAsync("UpdateItem", new object[] {
                        id,
                        itemCode,
                        itemCodeTag,
                        itemName,
                        description,
                        brand,
                        unit,
                        supplierName,
                        ssLevel,
                        LTDelivery,
                        Inventory}, this.UpdateItemOperationCompleted, userState);
        }
        
        private void OnUpdateItemOperationCompleted(object arg) {
            if ((this.UpdateItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateItemCompleted(this, new UpdateItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertRequestOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertRequestOrder(string xml1, string xml2) {
            object[] results = this.Invoke("InsertRequestOrder", new object[] {
                        xml1,
                        xml2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertRequestOrderAsync(string xml1, string xml2) {
            this.InsertRequestOrderAsync(xml1, xml2, null);
        }
        
        /// <remarks/>
        public void InsertRequestOrderAsync(string xml1, string xml2, object userState) {
            if ((this.InsertRequestOrderOperationCompleted == null)) {
                this.InsertRequestOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRequestOrderOperationCompleted);
            }
            this.InvokeAsync("InsertRequestOrder", new object[] {
                        xml1,
                        xml2}, this.InsertRequestOrderOperationCompleted, userState);
        }
        
        private void OnInsertRequestOrderOperationCompleted(object arg) {
            if ((this.InsertRequestOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRequestOrderCompleted(this, new InsertRequestOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RO_Requestor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RO_Requestor(int userID) {
            object[] results = this.Invoke("Get_RO_Requestor", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RO_RequestorAsync(int userID) {
            this.Get_RO_RequestorAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_RO_RequestorAsync(int userID, object userState) {
            if ((this.Get_RO_RequestorOperationCompleted == null)) {
                this.Get_RO_RequestorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RO_RequestorOperationCompleted);
            }
            this.InvokeAsync("Get_RO_Requestor", new object[] {
                        userID}, this.Get_RO_RequestorOperationCompleted, userState);
        }
        
        private void OnGet_RO_RequestorOperationCompleted(object arg) {
            if ((this.Get_RO_RequestorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RO_RequestorCompleted(this, new Get_RO_RequestorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Print_Transaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Print_Transaction(int userID, string RONum, string title) {
            object[] results = this.Invoke("Print_Transaction", new object[] {
                        userID,
                        RONum,
                        title});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Print_TransactionAsync(int userID, string RONum, string title) {
            this.Print_TransactionAsync(userID, RONum, title, null);
        }
        
        /// <remarks/>
        public void Print_TransactionAsync(int userID, string RONum, string title, object userState) {
            if ((this.Print_TransactionOperationCompleted == null)) {
                this.Print_TransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrint_TransactionOperationCompleted);
            }
            this.InvokeAsync("Print_Transaction", new object[] {
                        userID,
                        RONum,
                        title}, this.Print_TransactionOperationCompleted, userState);
        }
        
        private void OnPrint_TransactionOperationCompleted(object arg) {
            if ((this.Print_TransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Print_TransactionCompleted(this, new Print_TransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RO_BY_RONumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RO_BY_RONumber(string ronum) {
            object[] results = this.Invoke("Get_RO_BY_RONumber", new object[] {
                        ronum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RO_BY_RONumberAsync(string ronum) {
            this.Get_RO_BY_RONumberAsync(ronum, null);
        }
        
        /// <remarks/>
        public void Get_RO_BY_RONumberAsync(string ronum, object userState) {
            if ((this.Get_RO_BY_RONumberOperationCompleted == null)) {
                this.Get_RO_BY_RONumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RO_BY_RONumberOperationCompleted);
            }
            this.InvokeAsync("Get_RO_BY_RONumber", new object[] {
                        ronum}, this.Get_RO_BY_RONumberOperationCompleted, userState);
        }
        
        private void OnGet_RO_BY_RONumberOperationCompleted(object arg) {
            if ((this.Get_RO_BY_RONumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RO_BY_RONumberCompleted(this, new Get_RO_BY_RONumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RO_Details", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RO_Details(int requestOrderID) {
            object[] results = this.Invoke("Get_RO_Details", new object[] {
                        requestOrderID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RO_DetailsAsync(int requestOrderID) {
            this.Get_RO_DetailsAsync(requestOrderID, null);
        }
        
        /// <remarks/>
        public void Get_RO_DetailsAsync(int requestOrderID, object userState) {
            if ((this.Get_RO_DetailsOperationCompleted == null)) {
                this.Get_RO_DetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RO_DetailsOperationCompleted);
            }
            this.InvokeAsync("Get_RO_Details", new object[] {
                        requestOrderID}, this.Get_RO_DetailsOperationCompleted, userState);
        }
        
        private void OnGet_RO_DetailsOperationCompleted(object arg) {
            if ((this.Get_RO_DetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RO_DetailsCompleted(this, new Get_RO_DetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RO_Endorser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RO_Endorser(int endorserID) {
            object[] results = this.Invoke("Get_RO_Endorser", new object[] {
                        endorserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RO_EndorserAsync(int endorserID) {
            this.Get_RO_EndorserAsync(endorserID, null);
        }
        
        /// <remarks/>
        public void Get_RO_EndorserAsync(int endorserID, object userState) {
            if ((this.Get_RO_EndorserOperationCompleted == null)) {
                this.Get_RO_EndorserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RO_EndorserOperationCompleted);
            }
            this.InvokeAsync("Get_RO_Endorser", new object[] {
                        endorserID}, this.Get_RO_EndorserOperationCompleted, userState);
        }
        
        private void OnGet_RO_EndorserOperationCompleted(object arg) {
            if ((this.Get_RO_EndorserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RO_EndorserCompleted(this, new Get_RO_EndorserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RO_Recommenders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RO_Recommenders(int recomID) {
            object[] results = this.Invoke("Get_RO_Recommenders", new object[] {
                        recomID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RO_RecommendersAsync(int recomID) {
            this.Get_RO_RecommendersAsync(recomID, null);
        }
        
        /// <remarks/>
        public void Get_RO_RecommendersAsync(int recomID, object userState) {
            if ((this.Get_RO_RecommendersOperationCompleted == null)) {
                this.Get_RO_RecommendersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RO_RecommendersOperationCompleted);
            }
            this.InvokeAsync("Get_RO_Recommenders", new object[] {
                        recomID}, this.Get_RO_RecommendersOperationCompleted, userState);
        }
        
        private void OnGet_RO_RecommendersOperationCompleted(object arg) {
            if ((this.Get_RO_RecommendersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RO_RecommendersCompleted(this, new Get_RO_RecommendersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RO_Approver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RO_Approver(int ApprID) {
            object[] results = this.Invoke("Get_RO_Approver", new object[] {
                        ApprID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RO_ApproverAsync(int ApprID) {
            this.Get_RO_ApproverAsync(ApprID, null);
        }
        
        /// <remarks/>
        public void Get_RO_ApproverAsync(int ApprID, object userState) {
            if ((this.Get_RO_ApproverOperationCompleted == null)) {
                this.Get_RO_ApproverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RO_ApproverOperationCompleted);
            }
            this.InvokeAsync("Get_RO_Approver", new object[] {
                        ApprID}, this.Get_RO_ApproverOperationCompleted, userState);
        }
        
        private void OnGet_RO_ApproverOperationCompleted(object arg) {
            if ((this.Get_RO_ApproverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RO_ApproverCompleted(this, new Get_RO_ApproverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_RO_ByRONumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_RO_ByRONumber(int ROID) {
            object[] results = this.Invoke("Get_RO_ByRONumber", new object[] {
                        ROID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_RO_ByRONumberAsync(int ROID) {
            this.Get_RO_ByRONumberAsync(ROID, null);
        }
        
        /// <remarks/>
        public void Get_RO_ByRONumberAsync(int ROID, object userState) {
            if ((this.Get_RO_ByRONumberOperationCompleted == null)) {
                this.Get_RO_ByRONumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_RO_ByRONumberOperationCompleted);
            }
            this.InvokeAsync("Get_RO_ByRONumber", new object[] {
                        ROID}, this.Get_RO_ByRONumberOperationCompleted, userState);
        }
        
        private void OnGet_RO_ByRONumberOperationCompleted(object arg) {
            if ((this.Get_RO_ByRONumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_RO_ByRONumberCompleted(this, new Get_RO_ByRONumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RO_UpdateForEndorse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RO_UpdateForEndorse(string ROID, int pUserId) {
            object[] results = this.Invoke("RO_UpdateForEndorse", new object[] {
                        ROID,
                        pUserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RO_UpdateForEndorseAsync(string ROID, int pUserId) {
            this.RO_UpdateForEndorseAsync(ROID, pUserId, null);
        }
        
        /// <remarks/>
        public void RO_UpdateForEndorseAsync(string ROID, int pUserId, object userState) {
            if ((this.RO_UpdateForEndorseOperationCompleted == null)) {
                this.RO_UpdateForEndorseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRO_UpdateForEndorseOperationCompleted);
            }
            this.InvokeAsync("RO_UpdateForEndorse", new object[] {
                        ROID,
                        pUserId}, this.RO_UpdateForEndorseOperationCompleted, userState);
        }
        
        private void OnRO_UpdateForEndorseOperationCompleted(object arg) {
            if ((this.RO_UpdateForEndorseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RO_UpdateForEndorseCompleted(this, new RO_UpdateForEndorseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RO_UpdateForRecommend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RO_UpdateForRecommend(string ROID) {
            object[] results = this.Invoke("RO_UpdateForRecommend", new object[] {
                        ROID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RO_UpdateForRecommendAsync(string ROID) {
            this.RO_UpdateForRecommendAsync(ROID, null);
        }
        
        /// <remarks/>
        public void RO_UpdateForRecommendAsync(string ROID, object userState) {
            if ((this.RO_UpdateForRecommendOperationCompleted == null)) {
                this.RO_UpdateForRecommendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRO_UpdateForRecommendOperationCompleted);
            }
            this.InvokeAsync("RO_UpdateForRecommend", new object[] {
                        ROID}, this.RO_UpdateForRecommendOperationCompleted, userState);
        }
        
        private void OnRO_UpdateForRecommendOperationCompleted(object arg) {
            if ((this.RO_UpdateForRecommendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RO_UpdateForRecommendCompleted(this, new RO_UpdateForRecommendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RO_UpdateForApproved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RO_UpdateForApproved(string ROID, int pUserId) {
            object[] results = this.Invoke("RO_UpdateForApproved", new object[] {
                        ROID,
                        pUserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RO_UpdateForApprovedAsync(string ROID, int pUserId) {
            this.RO_UpdateForApprovedAsync(ROID, pUserId, null);
        }
        
        /// <remarks/>
        public void RO_UpdateForApprovedAsync(string ROID, int pUserId, object userState) {
            if ((this.RO_UpdateForApprovedOperationCompleted == null)) {
                this.RO_UpdateForApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRO_UpdateForApprovedOperationCompleted);
            }
            this.InvokeAsync("RO_UpdateForApproved", new object[] {
                        ROID,
                        pUserId}, this.RO_UpdateForApprovedOperationCompleted, userState);
        }
        
        private void OnRO_UpdateForApprovedOperationCompleted(object arg) {
            if ((this.RO_UpdateForApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RO_UpdateForApprovedCompleted(this, new RO_UpdateForApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Select_RO_Approve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Select_RO_Approve() {
            object[] results = this.Invoke("Select_RO_Approve", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Select_RO_ApproveAsync() {
            this.Select_RO_ApproveAsync(null);
        }
        
        /// <remarks/>
        public void Select_RO_ApproveAsync(object userState) {
            if ((this.Select_RO_ApproveOperationCompleted == null)) {
                this.Select_RO_ApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelect_RO_ApproveOperationCompleted);
            }
            this.InvokeAsync("Select_RO_Approve", new object[0], this.Select_RO_ApproveOperationCompleted, userState);
        }
        
        private void OnSelect_RO_ApproveOperationCompleted(object arg) {
            if ((this.Select_RO_ApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Select_RO_ApproveCompleted(this, new Select_RO_ApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCanvass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCanvass(string xml1, string xml2) {
            object[] results = this.Invoke("InsertCanvass", new object[] {
                        xml1,
                        xml2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCanvassAsync(string xml1, string xml2) {
            this.InsertCanvassAsync(xml1, xml2, null);
        }
        
        /// <remarks/>
        public void InsertCanvassAsync(string xml1, string xml2, object userState) {
            if ((this.InsertCanvassOperationCompleted == null)) {
                this.InsertCanvassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCanvassOperationCompleted);
            }
            this.InvokeAsync("InsertCanvass", new object[] {
                        xml1,
                        xml2}, this.InsertCanvassOperationCompleted, userState);
        }
        
        private void OnInsertCanvassOperationCompleted(object arg) {
            if ((this.InsertCanvassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCanvassCompleted(this, new InsertCanvassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCanvassDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertCanvassDetails(string xml, int canvassID) {
            object[] results = this.Invoke("InsertCanvassDetails", new object[] {
                        xml,
                        canvassID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCanvassDetailsAsync(string xml, int canvassID) {
            this.InsertCanvassDetailsAsync(xml, canvassID, null);
        }
        
        /// <remarks/>
        public void InsertCanvassDetailsAsync(string xml, int canvassID, object userState) {
            if ((this.InsertCanvassDetailsOperationCompleted == null)) {
                this.InsertCanvassDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCanvassDetailsOperationCompleted);
            }
            this.InvokeAsync("InsertCanvassDetails", new object[] {
                        xml,
                        canvassID}, this.InsertCanvassDetailsOperationCompleted, userState);
        }
        
        private void OnInsertCanvassDetailsOperationCompleted(object arg) {
            if ((this.InsertCanvassDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCanvassDetailsCompleted(this, new InsertCanvassDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Approve_CanvassItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Approve_CanvassItems(int canID, int ItemID, int SupplierID) {
            object[] results = this.Invoke("Approve_CanvassItems", new object[] {
                        canID,
                        ItemID,
                        SupplierID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Approve_CanvassItemsAsync(int canID, int ItemID, int SupplierID) {
            this.Approve_CanvassItemsAsync(canID, ItemID, SupplierID, null);
        }
        
        /// <remarks/>
        public void Approve_CanvassItemsAsync(int canID, int ItemID, int SupplierID, object userState) {
            if ((this.Approve_CanvassItemsOperationCompleted == null)) {
                this.Approve_CanvassItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprove_CanvassItemsOperationCompleted);
            }
            this.InvokeAsync("Approve_CanvassItems", new object[] {
                        canID,
                        ItemID,
                        SupplierID}, this.Approve_CanvassItemsOperationCompleted, userState);
        }
        
        private void OnApprove_CanvassItemsOperationCompleted(object arg) {
            if ((this.Approve_CanvassItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approve_CanvassItemsCompleted(this, new Approve_CanvassItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Canvass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Canvass(int userID) {
            object[] results = this.Invoke("Get_Canvass", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CanvassAsync(int userID) {
            this.Get_CanvassAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_CanvassAsync(int userID, object userState) {
            if ((this.Get_CanvassOperationCompleted == null)) {
                this.Get_CanvassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CanvassOperationCompleted);
            }
            this.InvokeAsync("Get_Canvass", new object[] {
                        userID}, this.Get_CanvassOperationCompleted, userState);
        }
        
        private void OnGet_CanvassOperationCompleted(object arg) {
            if ((this.Get_CanvassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CanvassCompleted(this, new Get_CanvassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Canvass_for_Noted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Canvass_for_Noted(int userID) {
            object[] results = this.Invoke("Get_Canvass_for_Noted", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Canvass_for_NotedAsync(int userID) {
            this.Get_Canvass_for_NotedAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_Canvass_for_NotedAsync(int userID, object userState) {
            if ((this.Get_Canvass_for_NotedOperationCompleted == null)) {
                this.Get_Canvass_for_NotedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Canvass_for_NotedOperationCompleted);
            }
            this.InvokeAsync("Get_Canvass_for_Noted", new object[] {
                        userID}, this.Get_Canvass_for_NotedOperationCompleted, userState);
        }
        
        private void OnGet_Canvass_for_NotedOperationCompleted(object arg) {
            if ((this.Get_Canvass_for_NotedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Canvass_for_NotedCompleted(this, new Get_Canvass_for_NotedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Canvass_for_Approved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Canvass_for_Approved(int userID) {
            object[] results = this.Invoke("Get_Canvass_for_Approved", new object[] {
                        userID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Canvass_for_ApprovedAsync(int userID) {
            this.Get_Canvass_for_ApprovedAsync(userID, null);
        }
        
        /// <remarks/>
        public void Get_Canvass_for_ApprovedAsync(int userID, object userState) {
            if ((this.Get_Canvass_for_ApprovedOperationCompleted == null)) {
                this.Get_Canvass_for_ApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Canvass_for_ApprovedOperationCompleted);
            }
            this.InvokeAsync("Get_Canvass_for_Approved", new object[] {
                        userID}, this.Get_Canvass_for_ApprovedOperationCompleted, userState);
        }
        
        private void OnGet_Canvass_for_ApprovedOperationCompleted(object arg) {
            if ((this.Get_Canvass_for_ApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Canvass_for_ApprovedCompleted(this, new Get_Canvass_for_ApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CanvassDetailsNotApproved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_CanvassDetailsNotApproved(int canvassID) {
            object[] results = this.Invoke("Get_CanvassDetailsNotApproved", new object[] {
                        canvassID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CanvassDetailsNotApprovedAsync(int canvassID) {
            this.Get_CanvassDetailsNotApprovedAsync(canvassID, null);
        }
        
        /// <remarks/>
        public void Get_CanvassDetailsNotApprovedAsync(int canvassID, object userState) {
            if ((this.Get_CanvassDetailsNotApprovedOperationCompleted == null)) {
                this.Get_CanvassDetailsNotApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CanvassDetailsNotApprovedOperationCompleted);
            }
            this.InvokeAsync("Get_CanvassDetailsNotApproved", new object[] {
                        canvassID}, this.Get_CanvassDetailsNotApprovedOperationCompleted, userState);
        }
        
        private void OnGet_CanvassDetailsNotApprovedOperationCompleted(object arg) {
            if ((this.Get_CanvassDetailsNotApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CanvassDetailsNotApprovedCompleted(this, new Get_CanvassDetailsNotApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CanvassDetailsApproved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_CanvassDetailsApproved(int canvassID) {
            object[] results = this.Invoke("Get_CanvassDetailsApproved", new object[] {
                        canvassID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CanvassDetailsApprovedAsync(int canvassID) {
            this.Get_CanvassDetailsApprovedAsync(canvassID, null);
        }
        
        /// <remarks/>
        public void Get_CanvassDetailsApprovedAsync(int canvassID, object userState) {
            if ((this.Get_CanvassDetailsApprovedOperationCompleted == null)) {
                this.Get_CanvassDetailsApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CanvassDetailsApprovedOperationCompleted);
            }
            this.InvokeAsync("Get_CanvassDetailsApproved", new object[] {
                        canvassID}, this.Get_CanvassDetailsApprovedOperationCompleted, userState);
        }
        
        private void OnGet_CanvassDetailsApprovedOperationCompleted(object arg) {
            if ((this.Get_CanvassDetailsApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CanvassDetailsApprovedCompleted(this, new Get_CanvassDetailsApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CanvassDetailsAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_CanvassDetailsAll(int canvassID) {
            object[] results = this.Invoke("Get_CanvassDetailsAll", new object[] {
                        canvassID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CanvassDetailsAllAsync(int canvassID) {
            this.Get_CanvassDetailsAllAsync(canvassID, null);
        }
        
        /// <remarks/>
        public void Get_CanvassDetailsAllAsync(int canvassID, object userState) {
            if ((this.Get_CanvassDetailsAllOperationCompleted == null)) {
                this.Get_CanvassDetailsAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CanvassDetailsAllOperationCompleted);
            }
            this.InvokeAsync("Get_CanvassDetailsAll", new object[] {
                        canvassID}, this.Get_CanvassDetailsAllOperationCompleted, userState);
        }
        
        private void OnGet_CanvassDetailsAllOperationCompleted(object arg) {
            if ((this.Get_CanvassDetailsAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CanvassDetailsAllCompleted(this, new Get_CanvassDetailsAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_CanvassDetailsAll1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_CanvassDetailsAll1(int canvassID) {
            object[] results = this.Invoke("Get_CanvassDetailsAll1", new object[] {
                        canvassID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CanvassDetailsAll1Async(int canvassID) {
            this.Get_CanvassDetailsAll1Async(canvassID, null);
        }
        
        /// <remarks/>
        public void Get_CanvassDetailsAll1Async(int canvassID, object userState) {
            if ((this.Get_CanvassDetailsAll1OperationCompleted == null)) {
                this.Get_CanvassDetailsAll1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CanvassDetailsAll1OperationCompleted);
            }
            this.InvokeAsync("Get_CanvassDetailsAll1", new object[] {
                        canvassID}, this.Get_CanvassDetailsAll1OperationCompleted, userState);
        }
        
        private void OnGet_CanvassDetailsAll1OperationCompleted(object arg) {
            if ((this.Get_CanvassDetailsAll1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CanvassDetailsAll1Completed(this, new Get_CanvassDetailsAll1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllItems() {
            object[] results = this.Invoke("GetAllItems", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllItemsAsync() {
            this.GetAllItemsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllItemsAsync(object userState) {
            if ((this.GetAllItemsOperationCompleted == null)) {
                this.GetAllItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllItemsOperationCompleted);
            }
            this.InvokeAsync("GetAllItems", new object[0], this.GetAllItemsOperationCompleted, userState);
        }
        
        private void OnGetAllItemsOperationCompleted(object arg) {
            if ((this.GetAllItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllItemsCompleted(this, new GetAllItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllData(string title, string ttype) {
            object[] results = this.Invoke("GetAllData", new object[] {
                        title,
                        ttype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDataAsync(string title, string ttype) {
            this.GetAllDataAsync(title, ttype, null);
        }
        
        /// <remarks/>
        public void GetAllDataAsync(string title, string ttype, object userState) {
            if ((this.GetAllDataOperationCompleted == null)) {
                this.GetAllDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDataOperationCompleted);
            }
            this.InvokeAsync("GetAllData", new object[] {
                        title,
                        ttype}, this.GetAllDataOperationCompleted, userState);
        }
        
        private void OnGetAllDataOperationCompleted(object arg) {
            if ((this.GetAllDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDataCompleted(this, new GetAllDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertConstruction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertConstruction(string data) {
            object[] results = this.Invoke("InsertConstruction", new object[] {
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertConstructionAsync(string data) {
            this.InsertConstructionAsync(data, null);
        }
        
        /// <remarks/>
        public void InsertConstructionAsync(string data, object userState) {
            if ((this.InsertConstructionOperationCompleted == null)) {
                this.InsertConstructionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertConstructionOperationCompleted);
            }
            this.InvokeAsync("InsertConstruction", new object[] {
                        data}, this.InsertConstructionOperationCompleted, userState);
        }
        
        private void OnInsertConstructionOperationCompleted(object arg) {
            if ((this.InsertConstructionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertConstructionCompleted(this, new InsertConstructionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Canvass_Noted", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Update_Canvass_Noted(int canvassID, int UserId) {
            object[] results = this.Invoke("Update_Canvass_Noted", new object[] {
                        canvassID,
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Update_Canvass_NotedAsync(int canvassID, int UserId) {
            this.Update_Canvass_NotedAsync(canvassID, UserId, null);
        }
        
        /// <remarks/>
        public void Update_Canvass_NotedAsync(int canvassID, int UserId, object userState) {
            if ((this.Update_Canvass_NotedOperationCompleted == null)) {
                this.Update_Canvass_NotedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Canvass_NotedOperationCompleted);
            }
            this.InvokeAsync("Update_Canvass_Noted", new object[] {
                        canvassID,
                        UserId}, this.Update_Canvass_NotedOperationCompleted, userState);
        }
        
        private void OnUpdate_Canvass_NotedOperationCompleted(object arg) {
            if ((this.Update_Canvass_NotedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Canvass_NotedCompleted(this, new Update_Canvass_NotedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Canvass_Approved", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Update_Canvass_Approved(int canvassID, int UserId) {
            object[] results = this.Invoke("Update_Canvass_Approved", new object[] {
                        canvassID,
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Update_Canvass_ApprovedAsync(int canvassID, int UserId) {
            this.Update_Canvass_ApprovedAsync(canvassID, UserId, null);
        }
        
        /// <remarks/>
        public void Update_Canvass_ApprovedAsync(int canvassID, int UserId, object userState) {
            if ((this.Update_Canvass_ApprovedOperationCompleted == null)) {
                this.Update_Canvass_ApprovedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Canvass_ApprovedOperationCompleted);
            }
            this.InvokeAsync("Update_Canvass_Approved", new object[] {
                        canvassID,
                        UserId}, this.Update_Canvass_ApprovedOperationCompleted, userState);
        }
        
        private void OnUpdate_Canvass_ApprovedOperationCompleted(object arg) {
            if ((this.Update_Canvass_ApprovedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Canvass_ApprovedCompleted(this, new Update_Canvass_ApprovedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Select_Canvass_ApprovedCompletedEventHandler(object sender, Select_Canvass_ApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Select_Canvass_ApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Select_Canvass_ApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectSummaryReportCompletedEventHandler(object sender, SelectSummaryReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSummaryReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSummaryReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertPurchaseOrderCompletedEventHandler(object sender, InsertPurchaseOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPurchaseOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPurchaseOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_POCompletedEventHandler(object sender, Get_POCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_POCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_POCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_Pending_POCompletedEventHandler(object sender, Get_Pending_POCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Pending_POCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Pending_POCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_PO_for_NotedCompletedEventHandler(object sender, Get_PO_for_NotedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_PO_for_NotedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_PO_for_NotedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_PO_for_ApprovedCompletedEventHandler(object sender, Get_PO_for_ApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_PO_for_ApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_PO_for_ApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_PODetailsAllCompletedEventHandler(object sender, Get_PODetailsAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_PODetailsAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_PODetailsAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Update_PO_NotedCompletedEventHandler(object sender, Update_PO_NotedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_PO_NotedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_PO_NotedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Update_PO_ApprovedCompletedEventHandler(object sender, Update_PO_ApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_PO_ApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_PO_ApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertMRISCompletedEventHandler(object sender, InsertMRISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMRISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMRISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_MRISCompletedEventHandler(object sender, Get_MRISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_MRISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_MRISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_MRISDetailsCompletedEventHandler(object sender, Get_MRISDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_MRISDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_MRISDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Update_MRISCompletedEventHandler(object sender, Update_MRISCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_MRISCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_MRISCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Select_PO_ApprovedCompletedEventHandler(object sender, Select_PO_ApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Select_PO_ApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Select_PO_ApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_Pending_RRCompletedEventHandler(object sender, Get_Pending_RRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Pending_RRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Pending_RRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertRICompletedEventHandler(object sender, InsertRICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RICompletedEventHandler(object sender, Get_RICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RIDetailsCompletedEventHandler(object sender, Get_RIDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RIDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RIDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Update_RICompletedEventHandler(object sender, Update_RICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_RICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_RICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertReceivingReportCompletedEventHandler(object sender, InsertReceivingReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertReceivingReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertReceivingReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertRRDetailsCompletedEventHandler(object sender, InsertRRDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRRDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRRDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RR_for_NotedCompletedEventHandler(object sender, Get_RR_for_NotedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RR_for_NotedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RR_for_NotedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Update_RR_NotedCompletedEventHandler(object sender, Update_RR_NotedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_RR_NotedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_RR_NotedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Update_RR_ApprovedCompletedEventHandler(object sender, Update_RR_ApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_RR_ApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_RR_ApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RR_for_ApprovedCompletedEventHandler(object sender, Get_RR_for_ApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RR_for_ApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RR_for_ApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSignatoryCompletedEventHandler(object sender, GetSignatoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignatoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignatoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSignatoryByUserIdCompletedEventHandler(object sender, GetSignatoryByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignatoryByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignatoryByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertSignatoryCompletedEventHandler(object sender, InsertSignatoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSignatoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSignatoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateSignatoryCompletedEventHandler(object sender, UpdateSignatoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSignatoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSignatoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteSignatoryCompletedEventHandler(object sender, DeleteSignatoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSignatoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSignatoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void VersionCompletedEventHandler(object sender, VersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void VerifyUserLoginCompletedEventHandler(object sender, VerifyUserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyUserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyUserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectDepartmentCompletedEventHandler(object sender, SelectDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertDepartmentCompletedEventHandler(object sender, InsertDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateDepartmentCompletedEventHandler(object sender, UpdateDepartmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectBranchCompletedEventHandler(object sender, SelectBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertBranchCompletedEventHandler(object sender, InsertBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateBranchCompletedEventHandler(object sender, UpdateBranchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateBranchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateBranchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectPositionCompletedEventHandler(object sender, SelectPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertPositionCompletedEventHandler(object sender, InsertPositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdatePositionCompletedEventHandler(object sender, UpdatePositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RegisterUserAccountCompletedEventHandler(object sender, RegisterUserAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterUserAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterUserAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectUserByUserNameCompletedEventHandler(object sender, SelectUserByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectUserByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectUserByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectUserByUserIDCompletedEventHandler(object sender, SelectUserByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectUserByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectUserByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectAllUserCompletedEventHandler(object sender, SelectAllUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectAllUserV2CompletedEventHandler(object sender, SelectAllUserV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllUserV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllUserV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertAccessModuleCompletedEventHandler(object sender, InsertAccessModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAccessModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAccessModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertUserAccessRightsCompletedEventHandler(object sender, InsertUserAccessRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUserAccessRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUserAccessRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteUserAccessRightsCompletedEventHandler(object sender, DeleteUserAccessRightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserAccessRightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserAccessRightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectUserAccessModuleCompletedEventHandler(object sender, SelectUserAccessModuleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectUserAccessModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectUserAccessModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateUserPasswordCompletedEventHandler(object sender, UpdateUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertSupplierCompletedEventHandler(object sender, InsertSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertAccountsCompletedEventHandler(object sender, InsertAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertItemsCompletedEventHandler(object sender, InsertItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectSupplierCompletedEventHandler(object sender, SelectSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateSupplierCompletedEventHandler(object sender, UpdateSupplierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateAccountCompletedEventHandler(object sender, UpdateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectAllAccountCompletedEventHandler(object sender, SelectAllAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectAllItemCompletedEventHandler(object sender, SelectAllItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SelectItemPerIDCompletedEventHandler(object sender, SelectItemPerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectItemPerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectItemPerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateItemCompletedEventHandler(object sender, UpdateItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertRequestOrderCompletedEventHandler(object sender, InsertRequestOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertRequestOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertRequestOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RO_RequestorCompletedEventHandler(object sender, Get_RO_RequestorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RO_RequestorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RO_RequestorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Print_TransactionCompletedEventHandler(object sender, Print_TransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Print_TransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Print_TransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RO_BY_RONumberCompletedEventHandler(object sender, Get_RO_BY_RONumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RO_BY_RONumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RO_BY_RONumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RO_DetailsCompletedEventHandler(object sender, Get_RO_DetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RO_DetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RO_DetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RO_EndorserCompletedEventHandler(object sender, Get_RO_EndorserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RO_EndorserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RO_EndorserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RO_RecommendersCompletedEventHandler(object sender, Get_RO_RecommendersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RO_RecommendersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RO_RecommendersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RO_ApproverCompletedEventHandler(object sender, Get_RO_ApproverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RO_ApproverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RO_ApproverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_RO_ByRONumberCompletedEventHandler(object sender, Get_RO_ByRONumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_RO_ByRONumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_RO_ByRONumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RO_UpdateForEndorseCompletedEventHandler(object sender, RO_UpdateForEndorseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RO_UpdateForEndorseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RO_UpdateForEndorseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RO_UpdateForRecommendCompletedEventHandler(object sender, RO_UpdateForRecommendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RO_UpdateForRecommendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RO_UpdateForRecommendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void RO_UpdateForApprovedCompletedEventHandler(object sender, RO_UpdateForApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RO_UpdateForApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RO_UpdateForApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Select_RO_ApproveCompletedEventHandler(object sender, Select_RO_ApproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Select_RO_ApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Select_RO_ApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertCanvassCompletedEventHandler(object sender, InsertCanvassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCanvassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCanvassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertCanvassDetailsCompletedEventHandler(object sender, InsertCanvassDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCanvassDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCanvassDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Approve_CanvassItemsCompletedEventHandler(object sender, Approve_CanvassItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Approve_CanvassItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Approve_CanvassItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_CanvassCompletedEventHandler(object sender, Get_CanvassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CanvassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CanvassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_Canvass_for_NotedCompletedEventHandler(object sender, Get_Canvass_for_NotedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Canvass_for_NotedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Canvass_for_NotedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_Canvass_for_ApprovedCompletedEventHandler(object sender, Get_Canvass_for_ApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Canvass_for_ApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Canvass_for_ApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_CanvassDetailsNotApprovedCompletedEventHandler(object sender, Get_CanvassDetailsNotApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CanvassDetailsNotApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CanvassDetailsNotApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_CanvassDetailsApprovedCompletedEventHandler(object sender, Get_CanvassDetailsApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CanvassDetailsApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CanvassDetailsApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_CanvassDetailsAllCompletedEventHandler(object sender, Get_CanvassDetailsAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CanvassDetailsAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CanvassDetailsAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Get_CanvassDetailsAll1CompletedEventHandler(object sender, Get_CanvassDetailsAll1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CanvassDetailsAll1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CanvassDetailsAll1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllItemsCompletedEventHandler(object sender, GetAllItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllDataCompletedEventHandler(object sender, GetAllDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsertConstructionCompletedEventHandler(object sender, InsertConstructionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertConstructionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertConstructionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Update_Canvass_NotedCompletedEventHandler(object sender, Update_Canvass_NotedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_Canvass_NotedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_Canvass_NotedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void Update_Canvass_ApprovedCompletedEventHandler(object sender, Update_Canvass_ApprovedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_Canvass_ApprovedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_Canvass_ApprovedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591